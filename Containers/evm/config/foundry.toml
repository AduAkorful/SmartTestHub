[profile.default]
src = "contracts"
out = "out"
libs = ["lib"]
test = "test"
cache_path = "cache_forge"
broadcast = "broadcast"
script = "script"
optimizer = true
optimizer_runs = 200
via_ir = false
force = false
evm_version = "paris"
auto_detect_solc = true
offline = false
use_literal_content = false
bytecode_hash = "none"
cbor_metadata = false
sparse_mode = false
build_info = true
extra_output = ["storageLayout", "metadata"]
extra_output_files = ["metadata"]
names = false
sizes = false
test_pattern = "test_*"
gas_limit = 9223372036854775807
gas_price = 0
gas_reports = ["*"]
solc_version = "0.8.18"
auto_detect_remappings = true
libraries = []
cache = true
force_evmasm = false
fs_permissions = [
    { access = "read-write", path = "./" },
    { access = "read", path = "./lib" },
    { access = "read", path = "./contracts" },
    { access = "write", path = "./logs" },
    { access = "write", path = "./out" }
]

[profile.default.fuzz]
runs = 1000
max_test_rejects = 65536
seed = '0x1'
dictionary_weight = 40
include_storage = true
include_push_bytes = true

[profile.default.invariant]
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true
shrink_run_limit = 5000

[profile.ci]
fuzz = { runs = 10000 }
verbosity = 4

[profile.lite]
optimizer = false
verbosity = 2

[fmt]
line_length = 120
tab_width = 4
bracket_spacing = true
int_types = "long"
multiline_func_header = "attributes_first"
quote_style = "double"
number_underscore = "thousands"
single_line_statement_blocks = "preserve"

[doc]
out = "docs"
title = "Smart Contract Documentation"
book = "book.toml"
homepage = "README.md"
ignore = ["**/test/**"]

[rpc_endpoints]
mainnet = "https://eth-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
goerli = "https://eth-goerli.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
sepolia = "https://eth-sepolia.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
polygon = "https://polygon-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
arbitrum = "https://arb-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
optimism = "https://opt-mainnet.g.alchemy.com/v2/${ALCHEMY_API_KEY}"
localhost = "http://127.0.0.1:8545"

[etherscan]
mainnet = { chain = 1, url = "https://api.etherscan.io/api" }
goerli = { chain = 5, url = "https://api-goerli.etherscan.io/api" }
sepolia = { chain = 11155111, url = "https://api-sepolia.etherscan.io/api" }
polygon = { chain = 137, url = "https://api.polygonscan.com/api" }
