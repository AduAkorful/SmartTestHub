[package]
name = "placeholder_contract"
version = "0.1.0"
edition = "2021"
authors = ["SmartTestHub <support@smarthub.com>"]
description = "Enhanced Solana smart contract testing framework"
license = "MIT"
repository = "https://github.com/AduAkorful/SmartTestHub"
keywords = ["solana", "blockchain", "smart-contract", "testing"]
categories = ["cryptography::cryptocurrencies"]

[dependencies]
# Updated to latest versions (addressing critical security issue)
anchor-lang = { version = "0.30.1", optional = true }
anchor-spl = { version = "0.30.1", optional = true }
solana-program = "2.3.0"                # Updated from 1.18.26
solana-sdk = "2.3.1"                    # Updated from 1.18.26
borsh = "1.5.7"                         # Updated from 0.10.4
borsh-derive = "1.5.7"                  # Updated from 0.10.4
thiserror = "2.0.12"                    # Updated from 1.0.69
spl-token = { version = "4.0.3", features = ["no-entrypoint"] }
spl-memo = "4.0.4"                      # Updated from 4.0.0
spl-associated-token-account = { version = "2.3.0", features = ["no-entrypoint"] }
arrayref = "0.3.9"
num-derive = "0.4.2"
num-traits = "0.2.19"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0.141"
itertools = "0.14.0"                    # Updated from 0.13.0
subtle = "2.6.1"                        # Updated from 2.4.1
zeroize = "1.8.1"                       # Updated from 1.3.0

# Performance and testing dependencies
criterion = { version = "0.5", features = ["html_reports"], optional = true }
proptest = "1.7.0"

[dev-dependencies]
solana-program-test = "2.3.5"           # Updated from 1.18.26
solana-banks-client = "2.3.5"           # Updated from 1.18.26
tokio = { version = "1.46", features = ["full", "test-util"] }
assert_matches = "1.5"
proptest = "1.7.0"
test-case = "3.3.1"

[lib]
name = "placeholder_contract"
path = "src/lib.rs"
crate-type = ["cdylib", "lib"]

[features]
default = []
no-entrypoint = []
anchor = ["anchor-lang", "anchor-spl"]
test-sbf = []
benchmarks = ["criterion"]

# Fix configuration issues from logs
[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(feature, values("custom-heap", "custom-panic"))'] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[profile.release]
overflow-checks = true
lto = "fat"
codegen-units = 1
panic = "abort"

[profile.release.build-override]
opt-level = 3
incremental = false
codegen-units = 1

[profile.bench]
opt-level = 3
debug = false
codegen-units = 1
lto = true

[workspace]
resolver = "2"

# Cargo audit configuration
[package.metadata.audit]
ignore = []
