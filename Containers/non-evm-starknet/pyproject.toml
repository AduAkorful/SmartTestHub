[tool.bandit]
# Bandit security configuration for StarkNet container
exclude_dirs = ["tests", "scripts/node_modules", "venv", ".venv"]
skips = [
    "B101",  # hardcoded_password_string - false positives in test constants
    "B102",  # exec_used - needed for dynamic contract compilation
    "B601",  # paramiko_calls - not used in this project
    "B602",  # subprocess_popen_with_shell_equals_true - controlled usage
    "B603",  # subprocess_without_shell_equals_true - controlled usage  
    "B404",  # blacklist_import_subprocess - needed for system calls
    "B501",  # request_with_no_cert_validation - dev environment
]

[tool.bandit.any_other_function_with_shell_equals_true]
no_shell = [
    "subprocess.call",
    "subprocess.check_call", 
    "subprocess.check_output",
    "subprocess.Popen",
    "subprocess.run"
]

[tool.safety]
# Safety configuration for dependency vulnerability scanning
ignore = [
    # Add specific CVE numbers here if needed for development dependencies
]

[tool.black]
# Code formatting configuration
line-length = 100
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[tool.pytest.ini_options]
# Pytest configuration
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:logs/coverage/html_report",
    "--cov-report=xml:logs/coverage/coverage.xml",
    "--cov-fail-under=75",  # Require at least 75% coverage
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "security: marks tests as security-focused tests",
    "performance: marks tests as performance tests",
]
asyncio_mode = "auto"

[tool.mypy]
# Type checking configuration  
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # More lenient for blockchain development
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.coverage.run]
# Coverage configuration
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*", 
    "*/.venv/*",
    "*/node_modules/*",
    "*/scripts/aggregate-all-logs.js"
]

[tool.coverage.report]
# Coverage reporting
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "logs/coverage/html_report" 